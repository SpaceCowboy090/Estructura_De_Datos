class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class MyLinkedList:
    def __init__(self):
        self.head = None

    def insert(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def delete(self, data):
        if not self.head:
            return
        
        if self.head.data == data:
            self.head = self.head.next
            return
        
        current = self.head
        while current.next and current.next.data != data:
            current = current.next
        
        if current.next:
            current.next = current.next.next

    def search(self, data):
        current = self.head
        while current:
            if current.data == data:
                return True
            current = current.next
        return False

    def display(self):
        elements = []
        current = self.head
        while current:
            elements.append(current.data)
            current = current.next
        if elements:
            print(" -> ".join(map(str, elements)))
        else:
            print("La lista está vacía")

if __name__ == "__main__":
    ll = MyLinkedList()
    ll.display()
    
    ll.insert(10)
    ll.insert(20)
    ll.insert(30)
    ll.display()
    
    ll.delete(20)
    ll.display()
    
    print(ll.search(30))
    print(ll.search(40))
